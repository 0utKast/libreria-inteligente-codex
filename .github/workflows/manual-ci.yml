name: Manual CI

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch or tag to test'
        required: false
        default: 'main'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      DISABLE_AI: "1"

    steps:
    - name: Check out code (ref input)
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r backend/requirements.txt

    - name: Run Python tests (curated)
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/backend
        export DISABLE_AI=1
        source .venv/bin/activate
        pytest backend/tests_curated/ --cov=backend --cov-report=xml --cov-report=term

    - name: Upload Python coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-coverage
        path: coverage.xml

    - name: Append Python coverage to summary
      run: |
        source .venv/bin/activate
        echo "### Python Coverage" >> $GITHUB_STEP_SUMMARY
        PY_OUT=$(python - << 'PY'
import xml.etree.ElementTree as ET
root = ET.parse('coverage.xml').getroot()
pct = float(root.attrib.get('line-rate', '0')) * 100.0
print(f"Total: {pct:.1f}%")
PY
        )
        echo "$PY_OUT" >> $GITHUB_STEP_SUMMARY

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run Node.js tests (curated + smoke + coverage)
      working-directory: ./frontend
      env:
        CI: true
      run: npm test -- --watchAll=false --coverage --testPathPattern="(CI\.smoke\.test\.js|__curated__/.*\.test\.js)"

    - name: Upload Node coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: node-coverage
        path: frontend/coverage

    - name: Append Node coverage to summary
      working-directory: ./frontend
      run: |
        echo "### Node Coverage" >> $GITHUB_STEP_SUMMARY
        if [ -f coverage/coverage-summary.json ]; then
          PCT=$(node -e "const s=require('./coverage/coverage-summary.json'); console.log(s.total.lines.pct)")
          echo "Total: ${PCT}%" >> $GITHUB_STEP_SUMMARY
        else
          echo "No coverage file found." >> $GITHUB_STEP_SUMMARY
        fi
